@page "/"
@inject HttpClient Http
@using BlazorTable

<h1>BlazorTable</h1>

<a href="https://github.com/IvanJosipovic/BlazorTable"><img alt="GitHub stars" src="https://img.shields.io/github/stars/IvanJosipovic/BlazorTable?style=social"></a>
&nbsp;
<a href="https://www.nuget.org/packages/BlazorTable"><img src="https://img.shields.io/nuget/vpre/BlazorTable.svg?style=flat-square" /></a>
<br />
<br />

<Table TableItem="PersonData" Items="data" PageSize="15">
    <Column TableItem="PersonData" Title="Id" Property="@(x => x.id)" Sortable="true" Filterable="true" Width="10%">
        <Template>
            @context.id
        </Template>
    </Column>
    <Column TableItem="PersonData" Title="First Name" Property="@(x => x.first_name)" Sortable="true" Filterable="true" Width="20%">
        <Template>
            @context.first_name
        </Template>
    </Column>
    <Column TableItem="PersonData" Title="Last Name" Property="@(x => x.last_name)" Sortable="true" Filterable="true" Width="20%">
        <Template>
            @context.last_name
        </Template>
    </Column>
    <Column TableItem="PersonData" Title="Email" Property="@(x => x.email)" Sortable="true" Filterable="true" Width="20%">
        <Template>
            <a href="mailto:@context.email">@context.email</a>
        </Template>
    </Column>
    <Column TableItem="PersonData" Title="Confirmed" Property="@(x => x.confirmed)" Sortable="true" Filterable="true" Width="10%">
        <Template>
            @context.confirmed.ToString()
        </Template>
    </Column>
    <Column TableItem="PersonData" Title="Fund" Property="@(x => x.fund)" Sortable="true" Filterable="true" Width="10%">
        <Template>
            @(context.fund.HasValue ? context.fund.Value.ToString("C") : string.Empty)
        </Template>
    </Column>
    <Column TableItem="PersonData" Title="Created Date" Property="@(x => x.created_date)" Sortable="true" Width="10%">
        <Template>
            @(context.created_date.HasValue ? context.created_date.Value.ToShortDateString() : string.Empty)
        </Template>
    </Column>
    <Pager TableItem="PersonData" ShowPageNumber="true" ShowTotalCount="true" />
</Table>

@code
{
    private PersonData[] data;

    protected override async Task OnInitializedAsync()
    {
        data = await Http.GetJsonAsync<PersonData[]>("sample-data/MOCK_DATA.json");
    }

    public class PersonData
    {
        public int? id { get; set; }
        public string first_name { get; set; }
        public string last_name { get; set; }
        public string email { get; set; }
        public bool? confirmed { get; set; }
        public float? fund { get; set; }
        public DateTime? created_date { get; set; }
    }
}
